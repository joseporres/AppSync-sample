{
    "Comment": "Register User",
    "StartAt": "Check Email",
    "States": {
        "Check Email": {
            "Type": "Task",
            "Resource": "${CheckEmailUserTypeFunctionArn}",
            "Parameters": {
                "userType.$": "$$.Execution.Input.settings.userType",
                "email.$": "$$.Execution.Input.settings.email"
            },
            "ResultPath": "$",
            "Next": "Valid Email??"
        },
        "Valid Email??": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$",
                    "BooleanEquals": true,
                    "Next": "Get User"
                }
            ],
            "Default": "Error Email Not Valid"
        },
        "Get User": {
            "Type": "Task",
            "Resource": "${DDBQuery}",
            "Parameters": {
                "TableName": "${TableName}",
                "KeyConditionExpression": "email = :email AND sort = :sort",
                "IndexName": "email-sort",
                "ExpressionAttributeValues": {
                    ":email": {
                        "S.$": "$$.Execution.Input.settings.email"
                    },
                    ":sort": {
                        "S": "SETTINGS"
                    }
                },
                "ProjectionExpression": "id"
            },
            "OutputPath": "$.Count",
            "Next": "Exist User??"
        },

        
        "Exist User??": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$",
                    "NumericGreaterThan": 0,
                    "Next": "Error User Exist"
                }
            ],
            "Default": "External User?"
        },
        "External User?":{
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$$.Execution.Input.settings.userType",
                    "StringEquals": "Usuario Externo",
                    "Next": "Create External User"
                }
            ],
            "Default": "Create User Protecta"
        },
        "Create External User":{
            "Type": "Task",
            "Resource": "${CreateCognitoUserFunctionArn}",
            "Parameters": {
                "email.$": "$$.Execution.Input.settings.email",
                "name.$": "$$.Execution.Input.settings.name"
            },
            "ResultPath": "$",
            "Next": "Create User Dynamo"

        },
        "Create User Dynamo": {
            "Type": "Task",
            "Resource": "${StoreSettingsFunctionArn}",
            "Parameters": {
                "settings.$" : "$$.Execution.Input.settings",
                "cognitoId.$": "$"
            },
            "ResultPath": null,
            "Next": "Access Granted"
        }, 
        "Create User Protecta": {
            "Type": "Task",
            "Resource": "${StoreSettingsFunctionArn}",
            "Parameters": {
                "settings.$" : "$$.Execution.Input.settings",
                "cognitoId" : ""
            },
            "ResultPath": null,
            "Next": "Get and Send Invitation"
        },   
        "Get and Send Invitation": {
            "Type": "Task",
            "Resource": "arn:aws:states:::states:startExecution",
            "Parameters": {
                "Input":{
                    "userType.$": "$$.Execution.Input.settings.userType",
                    "email.$": "$$.Execution.Input.settings.email",
                    "name.$": "$$.Execution.Input.settings.name"
                },
                "StateMachineArn": "${GetAndSendInvitationStateMachineArn}",
                "Name":"GetSendInvitation"
            },
            "ResultPath":null,
            "Next": "Access Granted"
        },
        "Access Granted": {
            "Type": "Pass",
            "Parameters": {
                "Acceso": "SI"
            },           
            "End": true
        },
        "Error Email Not Valid": {
            "Type": "Pass",
            "Parameters": {
                "Acceso": "NO",
                "Error": 1
            },           
            "End": true
        },
        "Error User Exist": {
            "Type": "Pass",
            "Parameters": {
                "Acceso": "NO",
                "Error": 2
            },           
            "End": true
        }
    }
}