# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Execution{
    output: String
}


type Option {
    # titulo
    title: String!
    # url
    url: String!
    # icono
    icon: String
    # activo o no
    active: Boolean!
}


input OptionInput {
    # titulo
    title: String!
    # url
    url: String!
    # icono
    icon: String
    # activo o no
    active: Boolean!
}

type SettingsOB
{
    
    # Aplicaciones
    apps:[Option]
    # Opciones del menu
    menu: [Option]!
    # Procesos
    processes:[Option]!
    ###Datos Personales
    # Nombre Completo
    name: String!
    # Tipo de documento
    docType: String!
    # numero de documento
    dni: String!
    # Sexo
    gender: String
    # FechaNacimiento
    birthDate: String
    # Pais de Nacimiento   !pendiente de revisar
    countryOfBirth: String
    # Email Personal
    personalEmail: String
    # Estado Civil
    maritalStatus: String
    # Celular
    personalPhone: String
    # Pais de Residencia
    countryOfResidence: String
    # Departamento de Residencia
    residenceDepartment: String
    # Dirección
    address: String
    ###Datos Laborales
    # departamento o area
    area: String!
    # subdepartamento o subarea
    subArea: String!
    # Puesto o Cargo
    workerType: String
    # Correo Corporativo
    email: String!
    # Fecha de Ingreso
    entryDate: String!
    # Celular Corporativo 
    phone: String
    # Tipo de Usuario
    userType: String!
    # rol
    role: String
    # cantidad dias permitidos
    days: Int! 
    # dias permitidos de home office
    homeOffice: Int 
    ## DUDAAAS
    # foto
    photo: String
    # jefe
    boss: String
    # nombre del jefe
    bossName: String
    # user
    user: String
}



input SettingsOBInput {
    ### Datos Personales
  # nombre completo
  name: String!
  # tipo de documento
  docType: String!
  # numero de documento
  dni: String!
  # Sexo
  gender: String
  # Fecha de nacimiento
  birthDate: String
  # pais de nacimiento
  countryOfBirth: String
  # email personal
  personalEmail: String
  # estado civil
  maritalStatus: String
  # telefono personal
  personalPhone: String
  # pais de residencia
  countryOfResidence: String
  # departamento de residencia
  residenceDepartment: String
  # dirección
  address: String
  ### Datos Laborales
  # departamento o area
  area: String!
  # subdepartamento o subarea
  subArea: String!
  # puesto o cargo
  workerType: String
  # correo corporativo
  email: String!
  # fecha de ingreso
  entryDate: String!
  # celular corporativo 
  phone: String
  # aplicaciones
  apps:[OptionInput]
  # ppciones del menu
  menu: [OptionInput]!
  # procesos
  processes:[OptionInput]!
  # foto
  photo: String  
  # tipo de usuario
  userType: String!
  ### Otros
  # rol
  role: String
  # rol de oficios
  officeRole: String
  # cantidad dias permitidos
  days: Int! 
  # dias permitidos de home office
  homeOffice: Int!
  # jefes
  boss: String
  # nombre del jefe
  bossName: String
  # user
  user: String
  # backup
  backup: String!
  # nombre del backup
  backupName: String!
}


type Query {
    # get settings
    getSettings: SettingsOB
}


type Mutation{
    storeSettings(settings: SettingsOBInput!): Execution,
    #QUITAR INPUT USERNAME Y CAMBIAR A OUTPUT A SETTINGS
    activeUserStatus(username: String): SettingsOB
}
