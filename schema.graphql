# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Execution{
    output: String
}


type Option {
    # titulo
    title: String!
    # url
    url: String!
    # icono
    icon: String
    # activo o no
    active: Boolean!
}


input OptionInput {
    # titulo
    title: String!
    # url
    url: String!
    # icono
    icon: String
    # activo o no
    active: Boolean!
}

type SettingsOB
{
    
    # Aplicaciones
    apps:[Option]
    # Opciones del menu
    menu: [Option]!
    # Procesos
    processes:[Option]!
    ###Datos Personales
    # Nombre Completo
    name: String!
    # Tipo de documento
    docType: String!
    # numero de documento
    dni: String!
    # Sexo
    gender: String
    # FechaNacimiento
    birthDate: String
    # Pais de Nacimiento   !pendiente de revisar
    countryOfBirth: String
    # Email Personal
    personalEmail: String
    # Estado Civil
    maritalStatus: String
    # Celular
    personalPhone: String
    # Pais de Residencia
    countryOfResidence: String
    # Departamento de Residencia
    residenceDepartment: String
    # Dirección
    address: String
    ###Datos Laborales
    # departamento o area
    area: String!
    # subdepartamento o subarea
    subArea: String!
    # Puesto o Cargo
    workerType: String
    # Correo Corporativo
    email: String!
    # Fecha de Ingreso
    entryDate: String!
    # Celular Corporativo 
    phone: String
    # Tipo de Usuario
    userType: String!
    # rol
    role: String
    # cantidad dias permitidos
    days: Int! 
    # dias permitidos de home office
    homeOffice: Int 
    ## DUDAAAS
    # foto
    photo: String
    # jefe
    boss: String
    # nombre del jefe
    bossName: String
    # user
    user: String
}


    
input SettingsOBInput {
    ###Datos Personales
    # Nombre Completo
    name: String!
    # Tipo de documento
    docType: String!
    # numero de documento
    dni: String!
    # Sexo
    gender: String
    # FechaNacimiento
    birthDate: String
    # Pais de Nacimiento   !pendiente de revisar
    countryOfBirth: String
    # Email Personal
    personalEmail: String
    # Estado Civil
    maritalStatus: String
    # Celular
    personalPhone: String
    # Pais de Residencia
    countryOfResidence: String
    # Departamento de Residencia
    residenceDepartment: String
    # Dirección
    address: String
    ###Datos Laborales
    # departamento o area
    area: String!
    # subdepartamento o subarea
    subArea: String!
    # Puesto o Cargo
    workerType: String
    # Correo Corporativo
    email: String!
    # Fecha de Ingreso
    entryDate: String!
    # Celular Corporativo 
    phone: String

    # Aplicaciones
    apps:[OptionInput]
    # Opciones del menu ???	PREGUNTAR QUE ES
    menu: [OptionInput]!
    # Procesos
    processes:[OptionInput]!
    
    # Tipo de Usuario
    userType: String!
    ###
    # rol
    role: String
    # cantidad dias permitidos
    days: Int! 
    # dias permitidos de home office
    homeOffice: Int 
    ## DUDAAAS
    # foto
    photo: String
    # jefe
    boss: String
    # nombre del jefe
    bossName: String
    # user
    user: String
    #backup
    backup: String!
    #nombre del backup
    backupName: String!
}

type AppObject{
    # activo o no
    active: Boolean!
    # icono de la aplicacion
    icon: String
    # nombre de la aplicacion
    title: String!
    # url de la aplicacion
    url: String!
}

type AppOutput{
    app: AppObject
}

input AppInput{
    id: String
    sort: String
}


type Query {
    # get settings
    getApp(app: AppInput): AppObject
}


type Mutation{
    putUpdatePractice(id: String, sort: String, nombre: String): Execution
    storeSettings(settings: SettingsOBInput!): Execution
}
